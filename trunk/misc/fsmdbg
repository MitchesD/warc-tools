#!/usr/bin/env perl

# ------------------------------------------------------------------- #
# Copyright (c) 2007-2008 Hanzo Archives Limited.                     #
#                                                                     #
# Licensed under the Apache License, Version 2.0 (the "License");     #
# you may not use this file except in compliance with the License.    #
# You may obtain a copy of the License at                             #
#                                                                     #
#     http://www.apache.org/licenses/LICENSE-2.0                      #
#                                                                     #
# Unless required by applicable law or agreed to in writing, software #
# distributed under the License is distributed on an "AS IS" BASIS,   #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or     #
# implied.                                                            #
# See the License for the specific language governing permissions and #
# limitations under the License.                                      #
#                                                                     #
# You may find more information about Hanzo Archives at               #
#                                                                     #
#     http://www.hanzoarchives.com/                                   #
#                                                                     #
# You may find more information about the WARC Tools project at       #
#                                                                     #
#     http://code.google.com/p/warc-tools/                            #
# ------------------------------------------------------------------- #

use strict;

sub usage () 
{
    print STDERR "\nShow where the FSM errors are located\n";
    print STDERR "Usage  : $0 offset file [bframe]\n";
    print STDERR "Options:\n";
    print STDERR "         offset: error offset returned by the FSM\n";
    print STDERR "         file  : parser filename\n";
    print STDERR "         bframe: possible back frame window to show\n";
    print STDERR "                 before the error (optional, default 5)\n";
    print STDERR "Example: $0 144 \"app/wdata/anvl-err1.warc\"\n";
    print STDERR "         $0 144 \"app/wdata/anvl-err1.warc\" 7\n";
    exit (1);
}

if (scalar @ARGV < 2 || scalar @ARGV > 3)
{
    usage();
}

my $bframe = 5;
if (scalar @ARGV == 3)
{
    if ($ARGV[2] !~ m|^\d*$|io)
    {
        print STDERR ">> offset \"$ARGV[0]\" isn't digit\n";
        usage();
    }
    $bframe = $ARGV[2];
}

if ($ARGV[0] !~ m|^\d*$|io)
{
    print STDERR ">> offset \"$ARGV[0]\" isn't digit\n";
    usage();
}

if (! -f $ARGV[1] || ! -e $ARGV[1])
{
    print STDERR ">> filename \"$ARGV[1]\" do not exist\n";
    usage();
}



open FILE, "< $ARGV[1]" or 
    die "can't open file $ARGV[1]: $!";

print  STDERR ">>> FSM DEBUGGER <<<\n";
printf STDERR "File Size: %-20s\n", (-s $ARGV [1]);
printf STDERR "Offset   : %-20s\n\n", $ARGV[0];


# print "$window" charaters before the errro
if ($ARGV[0] > $bframe + 1)
{
    my $prev;
    seek FILE, $ARGV[0] - $bframe, 0;
    sysread FILE, $prev, $bframe;
    print "... $prev";
}

print " =>";
seek FILE, $ARGV[0], 0;
while ( <FILE> )
{
    chomp;
    print;
}

print "<=\n";

close(FILE);
